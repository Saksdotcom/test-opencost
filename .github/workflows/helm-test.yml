---
resource:
  - "helm_release":
      "datadog":
        name: "datadog"
        repository: "https://saks.jfrog.io/artifactory/cx-helm-local"
        chart: "datadog"
        repository_username: var.artifactory_username
        repository_password: var.artifactory_password
        namespace: var.datadog_namespace
        create_namespace: var.datadog_create_namespace
        set:
          - name: "clusterName"
            value: module.eks.cluster_name
          - name: "datadog.namespace"
            value: var.datadog_namespace
          - name: "datadog.token"
            value: var.datadog_token
          - name: "datadog.apiKey"
            value: var.datadog_apikey

  - "helm_release":
      "ingress_nginx":
        name: "ingress-nginx"
        namespace: var.ingress_controller_namespace
        create_namespace: var.ingress_controller_create_namespace
        chart: "ingress-nginx"
        version: var.ingress_controller_version
        repository: "https://kubernetes.github.io/ingress-nginx"
        set:
          - name: "controller.service.annotations.service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags"
            value: "${join(\",\", [for k, v in local.tags : \"${k}=${v}\"])}"
          - name: "controller.service.annotations.service.beta.kubernetes.io/aws-load-balancer-backend-protocol"
            value: "http"
          - name: "controller.service.annotations.service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled"
            value: var.ingress_controller_cross_zone_load_balancing
          - name: "controller.service.annotations.service.beta.kubernetes.io/aws-load-balancer-internal"
            value: "true"
          - name: "controller.service.annotations.service.beta.kubernetes.io/aws-load-balancer-ssl-cert"
            value: aws_acm_certificate.wild_card_cluster_cert.arn
          - name: "controller.service.annotations.service.beta.kubernetes.io/aws-load-balancer-ssl-ports"
            value: "https"
          - name: "controller.service.annotations.service.beta.kubernetes.io/aws-load-balancer-type"
            value: "nlb"
          - name: "controller.service.enableHttp"
            value: false
          - name: "controller.service.targetPorts.https"
            value: "http"
        depends_on:
          - module.eks

  - "helm_release":
      "cilium":
        name: "cilium"
        namespace: var.cilium_namespace
        create_namespace: var.cilium_create_namespace
        chart: "cilium"
        version: var.cilium_version
        repository: "https://helm.cilium.io/"
        set:
          - name: "cni.chainingMode"
            value: "aws-cni"
          - name: "enableIPv4Masquerade"
            value: false
          - name: "tunnel"
            value: "disabled"
          - name: "endpointRoutes.enabled"
            value: true
        depends_on:
          - module.eks

  - "helm_release":
      "prometheus":
        name: "prometheus"
        namespace: "prometheus"
        create_namespace: true
        chart: "prometheus"
        repository: "https://prometheus-community.github.io/helm-charts"
        values:
          - "${file(\"./extraScrapeConfigs.yaml\")}"
        set:
          - name: "pushgateway.enabled"
            value: "false"
          - name: "alertmanager.enabled"
            value: "false"
          - name: "alertmanager.persistentVolume.storageClass"
            value: "gp3"
          - name: "server.persistentVolume.storageClass"
            value: "gp3"

resource:
  - "kubernetes_namespace":
      "opencost":
        metadata:
          name: "opencost"

  - "helm_release":
      "opencost":
        name: "opencost"
        namespace: kubernetes_namespace.opencost.metadata[0].name
        repository: "https://opencost.github.io/opencost-helm-chart"
        chart: "opencost"
        version: "1.1.0"
        values:
          - "${file(\"values.yaml\")}"
